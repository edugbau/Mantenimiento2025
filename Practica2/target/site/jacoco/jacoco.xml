<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="junit5-mps-uma"><sessioninfo id="LAPTOP-553LRLVI-5bbfd594" start="1741258381633" dump="1741258383034"/><sessioninfo id="LAPTOP-553LRLVI-7b013d47" start="1741258630164" dump="1741258631285"/><sessioninfo id="LAPTOP-553LRLVI-4b406c96" start="1741284367180" dump="1741284371201"/><sessioninfo id="LAPTOP-553LRLVI-341f8bce" start="1741286025859" dump="1741286028610"/><sessioninfo id="LAPTOP-553LRLVI-3719d2bf" start="1741286044067" dump="1741286047119"/><sessioninfo id="LAPTOP-553LRLVI-4c490e70" start="1741286093938" dump="1741286095823"/><sessioninfo id="LAPTOP-553LRLVI-a8b114c2" start="1741286407481" dump="1741286409423"/><sessioninfo id="LAPTOP-553LRLVI-e4e5005c" start="1741286529870" dump="1741286531988"/><sessioninfo id="LAPTOP-553LRLVI-63a24670" start="1741287044759" dump="1741287047071"/><sessioninfo id="LAPTOP-553LRLVI-4b8911b4" start="1741287419455" dump="1741287422274"/><sessioninfo id="LAPTOP-553LRLVI-aabb18f8" start="1741287839245" dump="1741287841580"/><sessioninfo id="LAPTOP-553LRLVI-e3cee175" start="1741287975732" dump="1741287978530"/><sessioninfo id="LAPTOP-553LRLVI-e0d4ed79" start="1741288861365" dump="1741288863826"/><sessioninfo id="LAPTOP-553LRLVI-f226a2e3" start="1741289074475" dump="1741289078525"/><sessioninfo id="LAPTOP-553LRLVI-96854aa5" start="1741289776288" dump="1741289777865"/><sessioninfo id="LAPTOP-553LRLVI-3b538c89" start="1741289801068" dump="1741289803256"/><sessioninfo id="LAPTOP-553LRLVI-3f3bd1b3" start="1741290044876" dump="1741290046579"/><sessioninfo id="LAPTOP-553LRLVI-216d2cea" start="1741290612876" dump="1741290615672"/><sessioninfo id="LAPTOP-553LRLVI-6c9fb259" start="1741290678630" dump="1741290679981"/><sessioninfo id="LAPTOP-553LRLVI-b303f83f" start="1741290721649" dump="1741290723476"/><sessioninfo id="LAPTOP-553LRLVI-61290f30" start="1741290756305" dump="1741290757733"/><sessioninfo id="LAPTOP-553LRLVI-59f0a321" start="1741290800368" dump="1741290801619"/><sessioninfo id="LAPTOP-553LRLVI-b6d2a2e9" start="1741290810506" dump="1741290811873"/><sessioninfo id="LAPTOP-553LRLVI-ec0bb26e" start="1741290869383" dump="1741290870752"/><sessioninfo id="LAPTOP-553LRLVI-a86c2189" start="1741290957039" dump="1741290958474"/><sessioninfo id="LAPTOP-553LRLVI-f712e9e" start="1741291074697" dump="1741291076043"/><sessioninfo id="LAPTOP-553LRLVI-6aacb53d" start="1741291375294" dump="1741291376896"/><sessioninfo id="AcerNitro5-Edu-62dcd99e" start="1743070059483" dump="1743070061674"/><package name=""><class name="BinarySearchTreeStructure" sourcefilename="BinarySearchTreeStructure.java"/><class name="BinarySearchTreeException" sourcefilename="BinarySearchTreeException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="3"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="BinarySearchTree" sourcefilename="BinarySearchTree.java"><method name="render" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Object;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeaf" desc="()Z" line="74"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="79"><counter type="INSTRUCTION" missed="1" covered="49"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minimum" desc="()Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maximum" desc="()Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeBranch" desc="(Ljava/lang/Object;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeBranchRecursive" desc="(Ljava/lang/Object;ZLBinarySearchTree;)V" line="125"><counter type="INSTRUCTION" missed="14" covered="25"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="(ZLBinarySearchTree;)V" line="135"><counter type="INSTRUCTION" missed="13" covered="24"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="155"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="depth" desc="()I" line="170"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="328"/><counter type="BRANCH" missed="14" covered="66"/><counter type="LINE" missed="4" covered="84"/><counter type="COMPLEXITY" missed="13" covered="39"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BinarySearchTreeException.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="4" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinarySearchTree.java"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="2"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="4"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="2"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="1" cb="1"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="2"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="2"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="2"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="1" cb="1"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="13" mb="1" cb="5"/><line nr="79" mi="0" ci="2" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="2"/><line nr="88" mi="1" ci="11" mb="2" cb="2"/><line nr="90" mi="0" ci="12" mb="1" cb="3"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="2"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="10" mb="1" cb="3"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="7" ci="3" mb="3" cb="1"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="1" cb="1"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="1" cb="1"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="1" cb="1"/><line nr="142" mi="0" ci="2" mb="1" cb="1"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="2"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="2"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="328"/><counter type="BRANCH" missed="14" covered="66"/><counter type="LINE" missed="4" covered="84"/><counter type="COMPLEXITY" missed="13" covered="39"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinarySearchTreeStructure.java"/><counter type="INSTRUCTION" missed="28" covered="332"/><counter type="BRANCH" missed="14" covered="66"/><counter type="LINE" missed="4" covered="86"/><counter type="COMPLEXITY" missed="13" covered="40"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="28" covered="332"/><counter type="BRANCH" missed="14" covered="66"/><counter type="LINE" missed="4" covered="86"/><counter type="COMPLEXITY" missed="13" covered="40"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="2"/></report>